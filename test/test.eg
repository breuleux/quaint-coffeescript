
require-macros:
   earl-mocha ->
      describe, it
      before, after, before-each, after-each
      assert, asserts
      expect-error
      xdescribe, xit

require:
   "../src" as qcs
   quaint


describe "quaint integration":

   before-each:
      @q = quaint{qcs}
      @q.setenv{"a", 555}

   it "simple expressions":
      assert @q.toHTML{"1 + 1 = {1 + 1}"} === "1 + 1 = 2"

   it "more complicated expressions":
      assert @q.toHTML{"{a = 6 + 6; a}"} === "12"

   it "declare and use variables":
      assert @q.toHTML{"{a = 6 + 6}Twelve is {a}"} === "12Twelve is 12"

   it "declare and use macros":
      assert @q.toHTML{"{foo = () -> 'x'\nnull}[foo::][dump::errors]"} === "x"
      assert @q.toHTML{s}.trim{} === "<sup>x</sup>" where s = """
      {
         sup = (engine, body) ->
            h 'sup', engine.gen(body)
         null
      }
      sup :: x
      """
